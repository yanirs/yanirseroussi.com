<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>confidence intervals on Yanir Seroussi | Data science and beyond</title><link>https://yanirs.github.io/yanirseroussi.com/tags/confidence-intervals/</link><description>Recent content in confidence intervals on Yanir Seroussi | Data science and beyond</description><generator>Hugo -- gohugo.io</generator><language>en-au</language><copyright>&amp;copy; [Yanir Seroussi](https://yanirseroussi.com/about/)&amp;nbsp;&amp;nbsp;|</copyright><lastBuildDate>Mon, 24 Aug 2020 01:35:17 +0000</lastBuildDate><atom:link href="https://yanirs.github.io/yanirseroussi.com/tags/confidence-intervals/index.xml" rel="self" type="application/rss+xml"/><item><title>Many is not enough: Counting simulations to bootstrap the right way</title><link>https://yanirs.github.io/yanirseroussi.com/2020/08/24/many-is-not-enough-counting-simulations-to-bootstrap-the-right-way/</link><pubDate>Mon, 24 Aug 2020 01:35:17 +0000</pubDate><guid>https://yanirs.github.io/yanirseroussi.com/2020/08/24/many-is-not-enough-counting-simulations-to-bootstrap-the-right-way/</guid><description>Previously, I encouraged readers to test different approaches to bootstrapped confidence interval (CI) estimation. Such testing can done by relying on the definition of CIs: Given an infinite number of independent samples from the same population, we expect a ci_level CI to contain the population parameter in exactly ci_level percent of the samples. Therefore, we run &amp;ldquo;many&amp;rdquo; simulations (num_simulations), where each simulation generates a random sample from the same population and runs the CI algorithm on the sample.</description></item></channel></rss>