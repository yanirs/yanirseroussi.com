<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>DevOps on Yanir Seroussi | Data science and beyond</title><link>https://yanirseroussi.com/tags/devops/</link><description>Recent content in DevOps on Yanir Seroussi | Data science and beyond</description><generator>Hugo -- gohugo.io</generator><language>en-au</language><copyright>Text and figures licensed under [CC BY-NC-ND 4.0](https://creativecommons.org/licenses/by-nc-nd/4.0/) by [Yanir Seroussi](https://yanirseroussi.com/about/), except where noted otherwise&amp;nbsp;&amp;nbsp;|</copyright><lastBuildDate>Wed, 04 Nov 2015 03:53:18 +0000</lastBuildDate><atom:link href="https://yanirseroussi.com/tags/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>Migrating a simple web application from MongoDB to Elasticsearch</title><link>https://yanirseroussi.com/2015/11/04/migrating-a-simple-web-application-from-mongodb-to-elasticsearch/</link><pubDate>Wed, 04 Nov 2015 03:53:18 +0000</pubDate><guid>https://yanirseroussi.com/2015/11/04/migrating-a-simple-web-application-from-mongodb-to-elasticsearch/</guid><description>Bandcamp Recommender (BCRecommender) is a web application that serves music recommendations from Bandcamp. I recently switched BCRecommender&amp;rsquo;s data store from MongoDB to Elasticsearch. This has made it possible to offer a richer search experience to users at a similar cost. This post describes the migration process and discusses some of the advantages and disadvantages of using Elasticsearch instead of MongoDB.
Motivation: Why swap MongoDB for Elasticsearch? I&amp;rsquo;ve written a few posts in the past on BCRecommender&amp;rsquo;s design and implementation.</description></item><item><title>Goodbye, Parse.com</title><link>https://yanirseroussi.com/2015/07/31/goodbye-parse-com/</link><pubDate>Fri, 31 Jul 2015 03:29:50 +0000</pubDate><guid>https://yanirseroussi.com/2015/07/31/goodbye-parse-com/</guid><description>Over the past year, I&amp;rsquo;ve been using Parse‘s free backend-as-a-service and web hosting to serve BCRecommender (music recommendation service) and Price Dingo (now-closed shopping comparison engine). The main lesson: You get what you pay for. Despite some improvements, Parse remains very unreliable, and any time saved by using their APIs and SDKs tends to be offset by having to work around the restrictions of their sandboxed environment. This post details some of the issues I faced and the transition away from the service.</description></item><item><title>Automating Parse.com bulk data imports</title><link>https://yanirseroussi.com/2015/01/15/automating-parse-com-bulk-data-imports/</link><pubDate>Thu, 15 Jan 2015 04:41:16 +0000</pubDate><guid>https://yanirseroussi.com/2015/01/15/automating-parse-com-bulk-data-imports/</guid><description>Parse is a great backend-as-a-service (BaaS) product. It removes much of the hassle involved in backend devops with its web hosting service, SDKs for all the major mobile platforms, and a generous free tier. Parse does have its share of flaws, including various reliability issues (which seem to be getting rarer), and limitations on what you can do (which is reasonable price to pay for working within a sandboxed environment). One such limitation is the lack of APIs to perform bulk data imports.</description></item><item><title>Building a recommender system on a shoestring budget (or: BCRecommender part 2 – general system layout)</title><link>https://yanirseroussi.com/2014/09/07/building-a-recommender-system-on-a-shoestring-budget/</link><pubDate>Sun, 07 Sep 2014 10:48:44 +0000</pubDate><guid>https://yanirseroussi.com/2014/09/07/building-a-recommender-system-on-a-shoestring-budget/</guid><description>This is the second part of a series of posts on my BCRecommender – personalised Bandcamp recommendations project. Check out the first part for the general motivation behind this project.
BCRecommender is a hobby project whose main goal is to help me find music I like on Bandcamp. Its secondary goal is to serve as a testing ground for ideas I have and things I&amp;rsquo;d like to explore.
One question I&amp;rsquo;ve been wondering about is: how much money does one need to spend on infrastructure for a simple web-based product before it reaches meaningful traffic?</description></item></channel></rss>